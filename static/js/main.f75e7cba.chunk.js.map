{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKUC,QAAU,EALpB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAKlCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SArBlE,kCAwBE,WACEG,cAAcZ,KAAKD,WAzBvB,oBA4BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YAzC1C,GAA2BO,aCP3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAqCMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMUtB,QAAU,EANpB,EAsBEuB,UAAY,SAACC,GACX,EAAKpB,SAAS,CAAEiB,UAAU,IAC1BG,EAAMC,kBAxBV,EA2BEC,UAAY,SAACF,GACX,EAAKpB,SAAS,CAAEiB,UAAU,IAC1BG,EAAMC,kBA7BV,uDAQE,WAA2B,IAAD,OACxBE,SAASC,iBAAiB,cAAe3B,KAAKsB,WAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,WACxCzB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAbP,kCAgBE,WACEW,SAASE,oBAAoB,cAAe5B,KAAKsB,WACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,WAC3Cb,cAAcZ,KAAKD,WAnBvB,oBAgCE,WACE,MAAgCC,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAvClC,GAAyBP,aC5CzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f75e7cba.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class Clock extends Component<Props, {}> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  private timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name === this.props.name) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App2: React.FC = () => {\n  const today = new Date();\n  let clockName = 'Clock-0';\n\n  // This code starts a timer\n  const timerId = window.setInterval(() => {\n    clockName = getRandomName();\n  }, 3300);\n\n  // this code stops the timer\n  window.clearInterval(timerId);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  private timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    clearInterval(this.timerId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    this.setState({ hasClock: false });\n    event.preventDefault();\n  };\n\n  showClock = (event: MouseEvent) => {\n    this.setState({ hasClock: true });\n    event.preventDefault();\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}